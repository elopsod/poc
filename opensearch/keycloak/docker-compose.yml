
services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://pg:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      KC_HTTP_ENABLED: "true"
      KC_HTTPS_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      PROXY_ADDRESS_FORWARDING: "true"

      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/server.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/server.key

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true

      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    entrypoint: ["/opt/keycloak/bin/kc.sh"]
    command: [
      "start-dev",
      "--features=token-exchange,organization,admin-fine-grained-authz,scripts,client-policies",
      "--http-port", "8080",
      "--https-port", "8443"
    ]
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./certs:/opt/keycloak/certs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
    - "infra"

  pg:
    image: postgres:16.4
    container_name: pg
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      PGUSER: keycloak
      POSTGRES_PASSWORD: keycloak
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d keycloak -U keycloak"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - "infra"

networks:
  infra:
    external: true
    name: my_network #docker network create my_network
